[This README is a merger of "readme_old" and "README_old", plus some new facts.]


This directory contains the modified Hershey fonts library so that
it works in C++.

NOTE: the endianness of the font files matters, so they need to be
generated for the specific computer architecture they will run on.
Run "make fonts" to generate a set of fonts for the local architecture.


This directory contains 3 programs, and one library.

libhershey.a
	The font library that renders characters using OpenGL commands.
	(Formerly, it was written to use IRIS-GL commands.)


h2v	- Usage: h2v Hershey_data_file [ fontfile name ]

	if the fontfile and name are not specified h2v will read in the
	Hershey data file and create a set of fonts according to the fonts
	defined in h2v.h. Fonts are defined as pairs of numbers giving the
	interval for the characters to be used. A pair which has a second
	number of zero is considered to be one character, the number of
	which is given by the first number in the pair.

	If the fontfile and name are specified h2v reads the fontfile and
	creates a binary suitable for use with VOGLE in the file name from
	the characters in the Hershey data file.


fdisp	- Usage: fdisp binary_font_file
	[Uses IRIS-GL, so needs to be updated]

	fdisp reads in the binary font file through vogle and displays 64
	characters to the screen.

	On A PC make the programs with makefile.msc, then run mkfnts.bat
	eg. "mkfnts \lib\hershey" (Make sure that the directory \lib\hershey
	exists)


hdisp	- Usage: hdisp Hershey_data_file
	[seems to no longer be part of the distribution, so consider it deprecated]

	hdisp reads in the Hershey data file and displays each character
	as a series of move-draws, with 64 characters to the screen.


demo	- Usage: demo binary_font_file
	[seems to be a VOGL specific program, so consider it deprecated]

	Demonstrates the display of words in 3D

